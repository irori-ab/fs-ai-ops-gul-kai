name: Terraform Operations

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform: plan, apply, or destroy'
        required: true
        type: choice
        options:
          - plan # Generates a plan
          - apply # Applies the generated plan (requires 'plan' first)
          - destroy # Destroys the infrastructure
        default: 'plan'
      branch:
        description: 'Branch to checkout and run against (default: main)'
        required: false
        default: 'main'

jobs:
  plan:
    name: "Terraform Plan"
    if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    outputs:
      tf_plan_artifact_name: terraform-plan-${{ github.run_id }}

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3 # Consider using a newer Terraform version if possible

      - name: Terraform init
        id: init
        run: terraform init -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        # Generate a plan for creation/update. This is skipped by 'apply' if action=='destroy'
        run: terraform plan -no-color -input=false -out=tfplan 
        continue-on-error: true # Continue to generate text plan even if plan has diffs/errors reported by exit code 2
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Generate Terraform Plan Text Output
        id: plan-text
        # Run if plan succeeded OR if plan failed with exit code 2 (changes exist)
        if: steps.plan.outcome == 'success' || steps.plan.outputs.exitcode == 2
        run: terraform show -no-color tfplan > tfplan.txt
        continue-on-error: true
  
      - name: Check Terraform Plan Status
        if: steps.plan.outcome == 'failure' && steps.plan.outputs.exitcode != 2
        run: |
          echo "Terraform plan failed severely (exit code ${{ steps.plan.outputs.exitcode }})!"
          exit 1

      - name: Upload Terraform Plan Artifacts
        if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.run_id }} 
          path: |
            ./terraform/tfplan
            ./terraform/tfplan.txt
          retention-days: 1 # Keep artifact for 1 day

  apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: plan # Depends on the plan job finishing successfully
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'

    # Define the environment which requires manual approval
    environment:
      name: live

    defaults:
      run:
        shell: bash
        working-directory: ./terraform # Ensure TF files are in a 'terraform' subdirectory

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }} # Checkout the same branch used for plan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.plan.outputs.tf_plan_artifact_name }}
          path: ./terraform/

      - name: Terraform init
        id: init
        run: terraform init -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Check if plan file exists
        id: check_plan
        run: |
          if [ -f "tfplan" ]; then
            echo "Plan file found."
          else
            echo "Error: Plan file 'tfplan' not found after download."
            exit 1
          fi

      - name: Terraform Apply
        id: apply
        if: steps.check_plan.outcome == 'success'
        run: terraform apply -input=false tfplan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  destroy:
    name: "Terraform Destroy"
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'

    environment:
      name: live

    defaults:
      run:
        shell: bash
        working-directory: ./terraform 

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3 

      - name: Terraform init
        id: init
        run: terraform init -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Plan Destroy
        id: plan-destroy
        run: terraform plan -destroy -no-color -input=false
        env:
           GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}